<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.seki.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.seki.bean.Course">
    <id column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="course_name" jdbcType="VARCHAR" property="courseName" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="course_time" jdbcType="VARCHAR" property="courseTime" />
    <result column="classroom" jdbcType="VARCHAR" property="classroom" />
    <result column="course_week" jdbcType="INTEGER" property="courseWeek" />
    <result column="course_type" jdbcType="VARCHAR" property="courseType" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    course_id, course_name, teacher_id, course_time, classroom, course_week, course_type, 
    department_id, score
  </sql>
  <select id="selectByExample" parameterType="com.seki.bean.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where course_id = #{courseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.seki.bean.CourseExample">
    delete from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.seki.bean.Course">
    insert into course (course_id, course_name, teacher_id, 
      course_time, classroom, course_week, 
      course_type, department_id, score
      )
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER}, 
      #{courseTime,jdbcType=VARCHAR}, #{classroom,jdbcType=VARCHAR}, #{courseWeek,jdbcType=INTEGER}, 
      #{courseType,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.seki.bean.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        course_id,
      </if>
      <if test="courseName != null">
        course_name,
      </if>
      <if test="teacherId != null">
        teacher_id,
      </if>
      <if test="courseTime != null">
        course_time,
      </if>
      <if test="classroom != null">
        classroom,
      </if>
      <if test="courseWeek != null">
        course_week,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null">
        #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseWeek != null">
        #{courseWeek,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.seki.bean.CourseExample" resultType="java.lang.Long">
    select count(*) from course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update course
    <set>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.courseName != null">
        course_name = #{record.courseName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacher_id = #{record.teacherId,jdbcType=INTEGER},
      </if>
      <if test="record.courseTime != null">
        course_time = #{record.courseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.classroom != null">
        classroom = #{record.classroom,jdbcType=VARCHAR},
      </if>
      <if test="record.courseWeek != null">
        course_week = #{record.courseWeek,jdbcType=INTEGER},
      </if>
      <if test="record.courseType != null">
        course_type = #{record.courseType,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update course
    set course_id = #{record.courseId,jdbcType=INTEGER},
      course_name = #{record.courseName,jdbcType=VARCHAR},
      teacher_id = #{record.teacherId,jdbcType=INTEGER},
      course_time = #{record.courseTime,jdbcType=VARCHAR},
      classroom = #{record.classroom,jdbcType=VARCHAR},
      course_week = #{record.courseWeek,jdbcType=INTEGER},
      course_type = #{record.courseType,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.seki.bean.Course">
    update course
    <set>
      <if test="courseName != null">
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseTime != null">
        course_time = #{courseTime,jdbcType=VARCHAR},
      </if>
      <if test="classroom != null">
        classroom = #{classroom,jdbcType=VARCHAR},
      </if>
      <if test="courseWeek != null">
        course_week = #{courseWeek,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.seki.bean.Course">
    update course
    set course_name = #{courseName,jdbcType=VARCHAR},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      course_time = #{courseTime,jdbcType=VARCHAR},
      classroom = #{classroom,jdbcType=VARCHAR},
      course_week = #{courseWeek,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>